<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc.xsd
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/jdbc
         http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
         http://www.springframework.org/schema/security
         http://www.springframework.org/schema/security/spring-security.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd">
   

    <mvc:annotation-driven/>
    
    <context:component-scan base-package="com.ar0ne.app.*"/>
 
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <bean id="userService" class="com.ar0ne.app.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
    </bean>
    
    <bean id="vacancyService" class="com.ar0ne.app.service.VacancyServiceImpl">
        <property name="vacancyDao" ref="vacancyDao"/>
    </bean>
    
<!--    <bean id="jobRequestService" class="com.ar0ne.app.service.JobRequestServiceImpl">
        <property name="jobRequestDao" ref="jobRequestDao"/>
    </bean>-->
    
    <bean id="vacancyDao" class="com.ar0ne.app.dao.VacancyDaoImpl">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
<!--    <bean id="jobRequestDao" class="com.ar0ne.app.dao.JobRequestDaoImpl">
        <property name="dataSource" ref="dataSource" />
    </bean>-->
    
    <bean id="userDao" class="com.ar0ne.app.dao.UserDaoImpl">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/spring_freelance" />
        <property name="username" value="root" />
        <property name="password" value="whatispassword" />
    </bean>
    
    <mvc:resources mapping="/resources/**" location="/resources/" />
    
    
    <security:http auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/userProfile/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
        <security:intercept-url pattern="/adminProfile/**" access="hasRole('ROLE_ADMIN')" />
        <security:intercept-url pattern="/login*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
        <security:logout logout-success-url="/index" invalidate-session="true" delete-cookies="JSESSIONID" />
    </security:http>
    
    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service
                data-source-ref="dataSource"
                users-by-username-query="SELECT LOGIN, PASSWORD, ENABLED FROM users WHERE LOGIN = ?"
                authorities-by-username-query="SELECT u1.LOGIN, u2.ROLE FROM users u1, user_roles u2 WHERE u1.USER_ID = u2.USER_ID and u1.LOGIN = ?" />
        </security:authentication-provider>
    </security:authentication-manager>
    
</beans>